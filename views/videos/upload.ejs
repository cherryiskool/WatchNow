<!-- POST form to upload video -->
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/web3/1.2.7-rc.0/web3.min.js"></script>


<form method="POST" action="/videos/upload" enctype="multipart/form-data">
    <input type="file" name="video" required> 
    <label for="videoTitle">Video Title</label>
    <input type="text" name="videoTitle" id="videoTitle" required>
    <label for="description">Description</label>
    <input type="text" name="description">
    <label for="reactTerms">React Terms (Percentage cut you would like from someone reacting to your video)</label>
    <input type="text" id="percentageCut">
    <div id="reactedToInputFormLocation">
      <p>Reacted To?</p>
      <button hx-get="/videos/upload/reactedToInputForm"
        hx-target="#reactedToInputFormLocation"
        hx-swap="innerHTML">Yes</button>
    </div>
    <input type="submit" onsubmit="deployContract()">
</form>

<button onclick="connectMetamask()">CONNECT TO METAMASK</button><br>
<button onclick="deployContract()">deployContract</button><br>

<p id="userArea">Status: Not connected to Metamask</p>
<script>
    let account;

    ABI = [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_videoTitle",
          "type": "string"
        },
        {
          "internalType": "address payable[]",
          "name": "_reactedToContracts",
          "type": "address[]"
        },
        {
          "internalType": "uint8[]",
          "name": "_reactedToContractsPercentageCuts",
          "type": "uint8[]"
        },
        {
          "internalType": "uint8",
          "name": "_percentageCut",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "applyContractTermsToDonation",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "percentageCut",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "reactedToContractsPercentageCuts",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "videoTitle",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ]

    bytecode = "0x60806040523480156200001157600080fd5b5060405162000f6a38038062000f6a8339818101604052810190620000379190620004b8565b336001806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600090805190602001906200008f929190620000e7565b508260029080519060200190620000a892919062000178565b508160039080519060200190620000c192919062000207565b5080600160006101000a81548160ff021916908360ff1602179055505050505062000773565b828054620000f590620006ab565b90600052602060002090601f01602090048101928262000119576000855562000165565b82601f106200013457805160ff191683800117855562000165565b8280016001018555821562000165579182015b828111156200016457825182559160200191906001019062000147565b5b509050620001749190620002b5565b5090565b828054828255906000526020600020908101928215620001f4579160200282015b82811115620001f35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019062000199565b5b509050620002039190620002b5565b5090565b82805482825590600052602060002090601f01602090048101928215620002a25791602002820160005b838211156200027157835183826101000a81548160ff021916908360ff160217905550926020019260010160208160000104928301926001030262000231565b8015620002a05782816101000a81549060ff021916905560010160208160000104928301926001030262000271565b505b509050620002b19190620002b5565b5090565b5b80821115620002d0576000816000905550600101620002b6565b5090565b6000620002eb620002e584620005a3565b6200056f565b905080838252602082019050828560208602820111156200030b57600080fd5b60005b858110156200033f578162000324888262000403565b8452602084019350602083019250506001810190506200030e565b5050509392505050565b6000620003606200035a84620005d2565b6200056f565b905080838252602082019050828560208602820111156200038057600080fd5b60005b85811015620003b45781620003998882620004a1565b84526020840193506020830192505060018101905062000383565b5050509392505050565b6000620003d5620003cf8462000601565b6200056f565b905082815260208101848484011115620003ee57600080fd5b620003fb84828562000675565b509392505050565b60008151905062000414816200073f565b92915050565b600082601f8301126200042c57600080fd5b81516200043e848260208601620002d4565b91505092915050565b600082601f8301126200045957600080fd5b81516200046b84826020860162000349565b91505092915050565b600082601f8301126200048657600080fd5b815162000498848260208601620003be565b91505092915050565b600081519050620004b28162000759565b92915050565b60008060008060808587031215620004cf57600080fd5b600085015167ffffffffffffffff811115620004ea57600080fd5b620004f88782880162000474565b945050602085015167ffffffffffffffff8111156200051657600080fd5b62000524878288016200041a565b935050604085015167ffffffffffffffff8111156200054257600080fd5b620005508782880162000447565b92505060606200056387828801620004a1565b91505092959194509250565b6000604051905081810181811067ffffffffffffffff8211171562000599576200059862000710565b5b8060405250919050565b600067ffffffffffffffff821115620005c157620005c062000710565b5b602082029050602081019050919050565b600067ffffffffffffffff821115620005f057620005ef62000710565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156200061f576200061e62000710565b5b601f19601f8301169050602081019050919050565b6000620006418262000648565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060ff82169050919050565b60005b838110156200069557808201518184015260208101905062000678565b83811115620006a5576000848401525b50505050565b60006002820490506001821680620006c457607f821691505b60208210811415620006db57620006da620006e1565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200074a8162000634565b81146200075657600080fd5b50565b620007648162000668565b81146200077057600080fd5b50565b6107e780620007836000396000f3fe60806040526004361061003f5760003560e01c80630a84842b1461004457806374f321991461004e578063a2d48c6f14610079578063f4f42246146100b6575b600080fd5b61004c6100e1565b005b34801561005a57600080fd5b506100636103b2565b604051610070919061050d565b60405180910390f35b34801561008557600080fd5b506100a0600480360381019061009b919061049c565b610440565b6040516100ad919061052f565b60405180910390f35b3480156100c257600080fd5b506100cb610474565b6040516100d8919061052f565b60405180910390f35b600060028054905011156103485760005b6002805490508160ff1610156103425760028160ff168154811061013f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc606460038460ff16815481106101c2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090602091828204019190069054906101000a900460ff166101ec9190610597565b60ff16600280549050346102009190610566565b61020a91906105c8565b9081150290604051600060405180830381858888f19350505050158015610235573d6000803e3d6000fd5b5060018054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc606460038460ff16815481106102af577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090602091828204019190069054906101000a900460ff166102d99190610597565b60016102e59190610622565b60ff16600280549050346102f99190610566565b61030391906105c8565b9081150290604051600060405180830381858888f1935050505015801561032e573d6000803e3d6000fd5b50808061033a906106d2565b9150506100f2565b506103b0565b60018054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156103ae573d6000803e3d6000fd5b505b565b600080546103bf906106a0565b80601f01602080910402602001604051908101604052809291908181526020018280546103eb906106a0565b80156104385780601f1061040d57610100808354040283529160200191610438565b820191906000526020600020905b81548152906001019060200180831161041b57829003601f168201915b505050505081565b6003818154811061045057600080fd5b9060005260206000209060209182820401919006915054906101000a900460ff1681565b600160009054906101000a900460ff1681565b6000813590506104968161079a565b92915050565b6000602082840312156104ae57600080fd5b60006104bc84828501610487565b91505092915050565b60006104d08261054a565b6104da8185610555565b93506104ea81856020860161066d565b6104f381610789565b840191505092915050565b61050781610660565b82525050565b6000602082019050818103600083015261052781846104c5565b905092915050565b600060208201905061054460008301846104fe565b92915050565b600081519050919050565b600082825260208201905092915050565b600061057182610656565b915061057c83610656565b92508261058c5761058b61072b565b5b828204905092915050565b60006105a282610660565b91506105ad83610660565b9250826105bd576105bc61072b565b5b828204905092915050565b60006105d382610656565b91506105de83610656565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610617576106166106fc565b5b828202905092915050565b600061062d82610660565b915061063883610660565b92508282101561064b5761064a6106fc565b5b828203905092915050565b6000819050919050565b600060ff82169050919050565b60005b8381101561068b578082015181840152602081019050610670565b8381111561069a576000848401525b50505050565b600060028204905060018216806106b857607f821691505b602082108114156106cc576106cb61075a565b5b50919050565b60006106dd82610660565b915060ff8214156106f1576106f06106fc565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6107a381610656565b81146107ae57600080fd5b5056fea26469706673582212208e495b4bcebfb91fc8fb1ee03cd907dfefe88a82348f3c5e28a4ffe4eac5700864736f6c63430008000033"

    const connectMetamask = async () => {
        if(window.ethereum !== "undefined") {
            const accounts = await ethereum.request({method: "eth_requestAccounts"});
            // this automatically checks the users wallet
            // may cause a bug if they have not entered one (will be fixed later)
            account = accounts[0];
            document.getElementById("userArea").innerHTML = `User Account: ${account}`;
        }
    }
    const deployContract = async () => {
        window.web3 =  await new Web3(window.ethereum);
        window.contract =  new window.web3.eth.Contract(ABI);
        const videoTitle = String(document.getElementById("videoTitle").value)
        let reactedToContracts = [document.getElementById("reactedTo").value]
        if(document.getElementById("reactedTo").value == '') {
            reactedToContracts = [];
        }
        console.log(reactedToContracts)
        const percentageCut = Number(document.getElementById("percentageCut").value)
        const deployment = await window.contract.deploy({
            data: bytecode,
            arguments:[videoTitle, reactedToContracts, [], percentageCut]
        }).send({from: account, gas: 600000})
        console.log(deployment.options.address)

    }

</script>